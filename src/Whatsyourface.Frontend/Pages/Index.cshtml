@page
@model IndexModel
@{
    ViewData["Title"] = "What's your face";
}

@if (this.Model.HasResult())
{
    // Vlad: if we are returning matches or an error scroll directly to them
    <script type="text/javascript">
        function ScrollView() {
            var resultsAreaDiv = document.getElementById('mainAreaDiv')
            resultsAreaDiv.scrollIntoView();
        }

        window.onload = ScrollView;
    </script>
}

<div class="container">
    <div class="jumbotron text-center" style="background-color: lemonchiffon">
        <h1>@Index.Title</h1>
        <p>@Index.Subtitle</p>
    </div>
</div>

<div class="row">
    @using (Html.BeginForm(FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="col-xs-12 col-md-4 text-center">
            <h2>@Index.Step1</h2>
            <div class="btn-group-justified" data-toggle="buttons">
                <label class="btn btn-toolbar">
                    @Html.RadioButtonFor(model => model.CountryCode, "fr",
                        new { id = "countryFrRadio", required = true, @checked = string.Equals(Model.CountryCode, "fr", StringComparison.OrdinalIgnoreCase) ? true : false })
                    <img class="img-thumbnail" src="~/images/flags/frflag.svg" alt="France" title="France">
                </label>

                <label class="btn btn-toolbar">
                    @Html.RadioButtonFor(model => model.CountryCode, "uk",
                         new { id = "countryUkRadio", @checked = string.Equals(Model.CountryCode, "uk", StringComparison.OrdinalIgnoreCase) ? true : false })
                    <img class="img-thumbnail" src="~/images/flags/ukflag.svg" alt="United Kingdom" title="United Kingdom">
                </label>
            </div>
        </div>
        <div class="col-xs-12 col-md-4 text-center">
            <h2>@Index.Step2</h2>
            <div id="mainAreaDiv" class="well mainarea">
                <button id="browseButton" type="button" class="btn btn-block btn-default btn-lg"
                        onclick="document.getElementById('imageFileInput').click()">
                    @Index.Browse
                </button>
                <input id="imageFileInput" class="invisible" type="file" accept="image/*"
                       asp-for="UserImage"
                       onchange="previewPhoto(event)">
                <script>
                    var previewPhoto = function (event) {
                        var image = event.target.files[0];
                        if (image.size <= @this.Model.FaceMatchSettings.MaxImageSizeInBytes) {
                            document.getElementById('thumbnailInput').value = null;
                            document.getElementById('resultsAreaDiv').classList.add('invisible-0px');
                            document.getElementById('submitButton').removeAttribute('disabled')
                            document.getElementById('photoPreviewImg').src = window.URL.createObjectURL(image);
                        }
                        else {
                            event.target.value = null;
                            document.getElementById('photoPreviewImg').removeAttribute('src');
                            document.getElementById('submitButton').addAttribute('disabled');
                            window.alert("@Index.Whoops @Index.ErrorFileTooLarge");
                        }
                    }
                </script>
                <div>
                    <img id="photoPreviewImg" class="img-preview" />
                </div>
                <div id="resultsAreaDiv" class="text-center">
                    @if (!string.IsNullOrWhiteSpace(Model.ErrorMessage))
                    {
                        <div class="alert alert-danger">
                            <strong>@Index.Whoops</strong> @Model.ErrorMessage
                        </div>
                    }
                    else if (Model.Matches != null && Model.Matches.Count > 0)
                    {
                        <div class="alert alert-success">
                            <strong>@Index.Sweet</strong> @string.Format(Index.SuccessFormat, Index.ResourceManager.GetString("Country_" + Model.CountryCode.ToLowerInvariant()))
                        </div>
                        <h4><strong>@Model.Matches[0].FirstName.ToUpperInvariant()</strong> <span class="label label-success">@Math.Round(Model.Matches[0].Score, 2)%</span></h4>
                        foreach (FaceToNameMatchViewModel match in Model.Matches.Skip(1))
                        {
                            <h4><strong>@match.FirstName.ToUpperInvariant()</strong> <span class="label label-default">@Math.Round(@match.Score, 2)%</span></h4>
                        }
                    }
                </div>
            </div>
            <div class="panel">
                <input id="submitButton" disabled class="btn btn-block btn-lg btn-primary" type="submit" value="What's your face?" />
            </div>
        </div>
        <div class="col-xs-12 col-md-4 text-center">
            <h2>@Index.Step3</h2>
            <div class="btn-group-justified" data-toggle="buttons">
                <label class="btn btn-toolbar">
                    <img src="~/images/examples/example-0001.jpg" class="img-thumbnail" onclick="selectThumbnail(event)" />
                </label>
                <label class="btn btn-toolbar">
                    <img src="~/images/examples/example-0002.jpg" class="img-thumbnail" onclick="selectThumbnail(event)" />
                </label>
                <label class="btn btn-toolbar">
                    <img src="~/images/examples/example-0003.jpg" class="img-thumbnail" onclick="selectThumbnail(event)" />
                </label>
                <label class="btn btn-toolbar">
                    <img src="~/images/examples/example-0004.jpg" class="img-thumbnail" onclick="selectThumbnail(event)" />
                </label>
                <script type="text/javascript">
                    var selectThumbnail = function (event) {
                        var imageUrl = event.target.src;
                        document.getElementById('thumbnailInput').value = imageUrl;
                        document.getElementById('photoPreviewImg').src = imageUrl;
                        document.getElementById('imageFileInput').value = null;
                        document.getElementById('resultsAreaDiv').classList.add('invisible-0px');
                        document.getElementById('submitButton').removeAttribute('disabled');
                    }
                </script>
                @Html.HiddenFor(model => model.ServerImageUrl, new { id = "thumbnailInput" })
            </div>
        </div>
    }
</div>
